version: '3.8'

services:
  # ========================================
  # Base de données MySQL
  # ========================================
  database:
    image: mysql:8.0
    container_name: seo-database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - seo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ========================================
  # Backend Python Flask
  # ========================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: seo-backend
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      # App
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      SECRET_KEY: ${SECRET_KEY}

      # Database
      DB_HOST: database
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      # APIs LLM
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY}

      # APIs Images
      IDEOGRAM_API_KEY: ${IDEOGRAM_API_KEY}
      REPLICATE_API_TOKEN: ${REPLICATE_API_TOKEN}
      STABILITY_API_KEY: ${STABILITY_API_KEY}

      # Services externes
      SCRAPING_API_KEY: ${SCRAPING_API_KEY}

      # Configuration
      MAX_ARTICLE_LENGTH: ${MAX_ARTICLE_LENGTH}
      TIMEOUT_SECONDS: ${TIMEOUT_SECONDS}
      MAX_RETRIES: ${MAX_RETRIES}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_FILE_PATH: /app/logs/app.log
    volumes:
      - backend_logs:/app/logs
      - backend_temp:/app/temp
      - backend_output:/app/output
      - backend_uploads:/app/uploads
    networks:
      - seo-network
    expose:
      - "5001"

  # ========================================
  # Frontend PHP + Nginx
  # ========================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: seo-frontend
    restart: unless-stopped
    depends_on:
      - backend
      - database
    environment:
      DB_HOST: database
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      PYTHON_API_URL: http://backend:5001
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    volumes:
      - frontend_uploads:/var/www/html/uploads
      - frontend_output:/var/www/html/output
    networks:
      - seo-network

# ========================================
# Volumes persistants
# ========================================
volumes:
  mysql_data:
    driver: local
  backend_logs:
    driver: local
  backend_temp:
    driver: local
  backend_output:
    driver: local
  backend_uploads:
    driver: local
  frontend_uploads:
    driver: local
  frontend_output:
    driver: local

# ========================================
# Réseau interne
# ========================================
networks:
  seo-network:
    driver: bridge